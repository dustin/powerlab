module Main (main) where

import Powerlab
import qualified Powerlab.Status as St

import qualified Data.ByteString.Lazy as B

import Criterion
import Criterion.Main

crcTestData :: B.ByteString
crcTestData = B.pack [108,180,233,208,195,11,228,20,129,16,113,67,174,120,47,137,145,128,240,223,218,199,130,211,220,113,252,181,18]

benchCrc16 :: Benchmark
benchCrc16 = bench "crc test" $ whnf crc16 crcTestData

statusTestData :: B.ByteString
statusTestData = B.pack [
  0x52, 0x61, 0x6d, 0x0, 0x0, 0x6f, 0xc7, 0xa0, 0xc7, 0xa0,
  0xc7, 0x90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x1f, 0x74, 0x3, 0x84, 0x43, 0x5c, 0x4, 0x26, 0x7, 0x6, 0x0,
  0xa, 0x0, 0x0, 0x4, 0x15, 0x0, 0x0, 0x0, 0x0, 0x3, 0x13, 0x3,
  0x13, 0x0, 0x0, 0x0, 0x82, 0x7, 0xe1, 0x0, 0x0, 0x80, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xb0, 0xc7, 0xb0, 0xc7,
  0xa0, 0x80, 0x60, 0x0, 0x0, 0x0, 0x0, 0x41, 0x50, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x7, 0xff, 0x82, 0x4, 0x36, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x84, 0x0, 0x0,
  0x7, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x6,
  0x0, 0x1, 0x1, 0x2, 0x0, 0x2, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x32, 0x3]

statusTestSt :: St.Status
statusTestSt = case St.parse statusTestData of
                 Left ex -> error ex
                 Right st -> st

benchVerify :: Benchmark
benchVerify = bench "status verification test" $ whnf verifyPkt statusTestData

main :: IO ()
main = defaultMain [benchCrc16, benchVerify]
